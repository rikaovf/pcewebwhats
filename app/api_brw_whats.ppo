#line 4 "app\api_brw_whats.prg"
function Api_Brw_whats( oDom )
    local hSession

    if USessionReady()
        hSession := UGetSession()
    endif

    do case


        case oDom:GetProc() == "infocliente"
            infoCliente( oDom )
        case oDom:GetProc() == "setdatawhatsapi"
            SetDataWhatsApi( oDom )
        case oDom:GetProc() == "testeorca"
            Teste( oDom )
        case oDom:GetProc() == "encerrar_sessao"
            USessionEnd()
            URedirect("/")
        otherwise
            oDom:SetError( "Proc don't defined => " + oDom:GetProc())
    endcase

retu oDom:Send()

































































































































































































function Teste( oDom )
    oDom:Console("clicou")
return nil



static function SetDataWhatsApi( oDom )

    local aRows := {}

    local aARQS := { { "ACE398.001",,, "ICE3982" }, { "ACE026.001",,, "ICE026" } }

    if ! abre_fecha_arquivos(aArqs, .T.)
        abre_fecha_arquivos(aArqs, .F.)
        return nil
    endif

    aRows      := GetRows( "ACE398", 1, 150, oDom )

    oDom:TableSetData( "tablewhats", aRows )

    abre_fecha_arquivos(aArqs, .F.)

retu nil







function GetRows( cAlias, nRecno, nTotal, oDom )

    local hSession, aReg, j
    local aRows     := {}

    local n         := 0
    local aStr      := (cAlias)->( DbStruct() )
    local nFields    := len( aStr )
    local cSituacao := ""
    local hData        := {=>}
    local hPhone    := {=>}


    if (hData := USession("data_user")) == nil
        return aRows
    endif

    (cAlias)->( ordSetFocus("ICE3984") )

    (cAlias)->( SetScope(0, Padr(hData["numero"], 13)) )
    (cAlias)->( SetScope(1, Padr(hData["numero"], 13)) )

    (cAlias)->( DbGoTop() )

    if ace398->(DbVazio())
        return aRows
    endif


    hPhone["phone"] := hData["numero"]
    hPhone["port"] := hData["port"]

    oDom:SetJs("setPhone", hPhone)

    while n < nTotal .AND. (cAlias)->( ! eof() )

        aReg := {=>}

        HB_HSet( aReg, "id"     , n )
        HB_HSet( aReg, "_recno"     , (cAlias)->( Recno() ) )
        HB_HSet( aReg, "id_serial"     , Alltrim((cAlias)->ID_SERIAL))

        for j := 1 to nFields
            do case
                case (cAlias)->( FieldName( j ) ) == "SITUACAO"
                    if (cAlias)->( FieldGet( j ) ) == 1
                        cSituacao := "Novo Atendimento"
                    elseif (cAlias)->( FieldGet( j ) ) == 2
                        cSituacao := "Aguardando Cli."
                    elseif (cAlias)->( FieldGet( j ) ) == 3
                        cSituacao := "Aguardando Resp."
                    elseif (cAlias)->( FieldGet( j ) ) == 4
                        cSituacao := "Encerrado"
                    elseif (cAlias)->( FieldGet( j ) ) == 6
                        cSituacao := "Nova Conversa"
                    else
                        cSituacao := "Indefinido"
                    endif
                    HB_HSet( aReg, (cAlias)->( FieldName( j ) ), cSituacao )
                case (cAlias)->( FieldName( j ) ) == "ID_RETAG" .OR. (cAlias)->( FieldName( j ) ) == "HORA"
                    HB_HSet( aReg, (cAlias)->( FieldName( j ) ), (cAlias)->( FieldGet( j ) ) )
                case (cAlias)->( FieldName( j ) ) == "PHONE"
                    HB_HSet( aReg, (cAlias)->( FieldName( j ) ), formataTelefone( (cAlias)->( FieldGet( j ) ) ) )
                case (cAlias)->( FieldName( j ) ) == "N_WHATSAPP"
                    HB_HSet( aReg, (cAlias)->( FieldName( j ) ), formataTelefone( (cAlias)->( FieldGet( j ) ) ) )
                case (cAlias)->( FieldName( j ) ) == "CHAVE_CLI"
                    HB_HSet( aReg, (cAlias)->( FieldName( j ) ), retornaNomeCliente( , (cAlias)->( FieldGet( j ) ) ) )
                case (cAlias)->( FieldName( j ) ) == "DATA"
                    HB_HSet( aReg, (cAlias)->( FieldName( j ) ), STRTRAN(DTOC( STOD( (cAlias)->( FieldGet( j ) ) ) ), "-", "/" ) )
                case (cAlias)->( FieldName( j ) ) == "FUNC_ABERT"
                    HB_HSet( aReg, (cAlias)->( FieldName( j ) ), (cAlias)->( FieldGet( j ) ) + "-" + CodToDes( "F" + (cAlias)->( FieldGet( j ) ), "ace004.001", "ICE004", "TAB_DES" ) )
            endcase
        next

        Aadd( aRows, aReg )

        (cAlias)->( DbSkip() )

        n++
    end

retu aRows





function infoCliente()
return nil
